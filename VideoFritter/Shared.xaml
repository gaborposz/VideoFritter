<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:VideoFritter"
                    xmlns:SlicingSlider="clr-namespace:VideoFritter.Controls.SlicingSlider"
                    xmlns:Converters="clr-namespace:VideoFritter.Converters"
                    xmlns:Common="clr-namespace:VideoFritter.Common">

    <Converters:TimeSpanToMillisecondsConverter x:Key="timeSpanToMillisecondsConverter" />
    <Converters:InverseBoolToVisibilityConverter x:Key="inverseBoolToVisibilityConverter" />
    <Converters:InverseBoolConverter x:Key="inverseBoolConverter" />
    <Converters:AndMultiValueConverter x:Key="andMultiValueConverter" />

    <RadialGradientBrush x:Key="defaultWindowBackgroundBrush">
        <GradientStop Color="#FF050A30" Offset="1"/>
        <GradientStop Color="#FF5B3087"/>
    </RadialGradientBrush>    
    
    <Style x:Key="DefaultWindowStyle">
        <Setter Property="Control.Background" Value="{StaticResource defaultWindowBackgroundBrush}" />
    </Style>

    <Style TargetType="{x:Type ToolTip}">
        <Setter Property="Background" Value="Black" />
        <Setter Property="Foreground" Value="White" />
    </Style>

    <Style TargetType="{x:Type Label}">
        <Setter Property="Foreground" Value="White" />
    </Style>

    <Style TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="White" />
    </Style>

    <Style TargetType="{x:Type CheckBox}">
        <Setter Property="Foreground" Value="White" />
    </Style>

    <Style TargetType="{x:Type Menu}">
        <Setter Property="Background" Value="#FF050A30" />
        <Setter Property="BorderThickness" Value="3" />
    </Style>

    <Style TargetType="{x:Type MenuItem}">
        <Setter Property="Background" Value="#FF050A30" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Border x:Name="templateRoot" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <Grid x:Name="Grid" VerticalAlignment="Center">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <ContentPresenter x:Name="Icon" Content="{TemplateBinding Icon}" ContentSource="Icon" HorizontalAlignment="Center" Height="16" Margin="3" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" Width="16"/>
                            <Path x:Name="GlyphPanel" Data="F1M10,1.2L4.7,9.1 4.5,9.1 0,5.2 1.3,3.5 4.3,6.1 8.3,0 10,1.2z" Fill="{TemplateBinding Foreground}" FlowDirection="LeftToRight" Margin="3" Visibility="Collapsed" VerticalAlignment="Center"/>
                            <ContentPresenter x:Name="ContentPresenter" 
                                              ContentTemplate="{TemplateBinding HeaderTemplate}" 
                                              Content="{TemplateBinding Header}" 
                                              Grid.Column="1" 
                                              ContentStringFormat="{TemplateBinding HeaderStringFormat}" 
                                              ContentSource="Header" 
                                              Margin="{TemplateBinding Padding}" 
                                              RecognizesAccessKey="True" 
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            <Popup x:Name="PART_Popup" AllowsTransparency="True" Focusable="False" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" Placement="Bottom">
                                <Border x:Name="SubMenuBorder" BorderBrush="#FF999999" BorderThickness="1" Padding="3" Background="{TemplateBinding Background}">
                                    <ScrollViewer x:Name="SubMenuScrollViewer" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                        <StackPanel Orientation="Horizontal">
                                            <Canvas x:Name="Canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top">
                                                <Rectangle x:Name="OpaqueRect" 
                                                           Fill="{Binding Background, ElementName=SubMenuBorder}" 
                                                           Height="{Binding ActualHeight, ElementName=SubMenuBorder}" 
                                                           Width="{Binding ActualWidth, ElementName=SubMenuBorder}"/>
                                            </Canvas>
                                            <Rectangle x:Name="Rectangle" 
                                                       Fill="{TemplateBinding Background}" 
                                                       HorizontalAlignment="Left" 
                                                       Width="1"/>
                                            <ItemsPresenter x:Name="ItemsPresenter" 
                                                            Margin="3,1,3,1" 
                                                            KeyboardNavigation.DirectionalNavigation="Cycle" 
                                                            Grid.IsSharedSizeScope="True" 
                                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                                            KeyboardNavigation.TabNavigation="Cycle"/>
                                        </StackPanel>
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSuspendingPopupAnimation" Value="True">
                            <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
                        </Trigger>
                        <Trigger Property="Icon" Value="{x:Null}">
                            <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                            <Setter Property="Visibility" TargetName="Rectangle" Value="Hidden"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                            <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsHighlighted" Value="True">
                            <Setter Property="Background" TargetName="templateRoot" Value="#3D26A0DA"/>
                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF26A0DA"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="#FF707070"/>
                            <Setter Property="Fill" TargetName="GlyphPanel" Value="#FF707070"/>
                        </Trigger>
                        <Trigger Property="CanContentScroll" SourceName="SubMenuScrollViewer" Value="False">
                            <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}"/>
                            <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type SlicingSlider:SlicingSlider}">
        <Setter Property="Foreground" Value="White" />
    </Style>

    <Style TargetType="{x:Type ListBox}">
        <Setter Property="Background" Value="{StaticResource defaultWindowBackgroundBrush}" />
        <Setter Property="BorderThickness" Value="0" />
    </Style>

    <Style TargetType="{x:Type ListBoxItem}">
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="BorderThickness" Value="0" />
    </Style>

    <RadialGradientBrush x:Key="defaultButtonBackgroundBrush" GradientOrigin="0.496,1.052">
        <RadialGradientBrush.RelativeTransform>
            <TransformGroup>
                <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="1.5" ScaleY="1.5"/>
                <TranslateTransform X="0.02" Y="0.3"/>
            </TransformGroup>
        </RadialGradientBrush.RelativeTransform>
        <GradientStop Offset="1" Color="#FFBDABA6"/>
        <GradientStop Offset="0.3" Color="#FF757C9B"/>
    </RadialGradientBrush>

    <RadialGradientBrush x:Key="pressedButtonBackgroundBrush" GradientOrigin="0.496,1.052">
        <RadialGradientBrush.RelativeTransform>
            <TransformGroup>
                <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="1.5" ScaleY="1.5"/>
                <TranslateTransform X="0.02" Y="0.3"/>
            </TransformGroup>
        </RadialGradientBrush.RelativeTransform>
        <GradientStop Offset="1" Color="#FFE6D3C8"/>
        <GradientStop Offset="0.3" Color="#FF959ED8"/>
    </RadialGradientBrush>

    <Style x:Key="BaseButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FontSize" Value="12" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Margin" Value="5,5" />
        <Setter Property="Padding" Value="6,2" />
        <Setter Property="Common:CustomButtonAttachedProperties.RadiusValue" Value="5" />
        <Setter Property="Template" >
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="grid">
                        <Border x:Name="border" 
                                Padding="{TemplateBinding Padding}" 
                                CornerRadius="{Binding Path=(Common:CustomButtonAttachedProperties.RadiusValue), RelativeSource={RelativeSource TemplatedParent}}" 
                                BorderBrush="Black" 
                                BorderThickness="1" 
                                Background="{StaticResource defaultButtonBackgroundBrush}">
                            <ContentPresenter HorizontalAlignment="Center"
                                                  VerticalAlignment="Center">
                            </ContentPresenter>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource pressedButtonBackgroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="#ffa800"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="grid" Value="0.25"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="GraphicButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource BaseButtonStyle}">
        <Setter Property="Margin" Value="2,2" />
        <Setter Property="Padding" Value="5,5" />
        <Setter Property="Common:CustomButtonAttachedProperties.RadiusValue" Value="15" />
    </Style>

    <Style x:Key="PlayButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource GraphicButtonStyle}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=Content, RelativeSource={RelativeSource Self}}" Value="Play">
                <Setter Property="ContentTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <Border Width="20" Height="20">
                                <Path HorizontalAlignment="Center" 
                                      VerticalAlignment="Center" 
                                      Fill="White" 
                                      Data="M4,0 L15,9 4,18 Z" />
                            </Border>
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=Content, RelativeSource={RelativeSource Self}}" Value="Pause">
                <Setter Property="ContentTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <Border Width="20" Height="20">
                                <Path HorizontalAlignment="Center" 
                                      VerticalAlignment="Center" 
                                      Fill="White" 
                                      Data="M0,0 L4,0 4,14 0,14 Z M8,0 L12,0 12,14 8,14 Z" />
                            </Border>
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>            
        </Style.Triggers>
    </Style>

</ResourceDictionary>