<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AboutText1" xml:space="preserve">
    <value>Licensed under the Apache License, Version 2.0 (the "License");
You may obtain a copy of the License at</value>
  </data>
  <data name="AboutText2" xml:space="preserve">
    <value>Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

This software uses FFmpeg CLI that is licensed under the LGPLv2.1 license.</value>
  </data>
  <data name="AboutWindowTitle" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="AddToQueue" xml:space="preserve">
    <value>Add to export queue</value>
  </data>
  <data name="AudioVolumeToolTip" xml:space="preserve">
    <value>Audio volume</value>
  </data>
  <data name="Backward" xml:space="preserve">
    <value>Go to start</value>
  </data>
  <data name="CancelButton" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="ClearExportQueue" xml:space="preserve">
    <value>Clear</value>
  </data>
  <data name="ClearExportQueueToolTip" xml:space="preserve">
    <value>Clear the queue</value>
  </data>
  <data name="CorrectTimeStampsCheckBox" xml:space="preserve">
    <value>Correct video timestamps</value>
  </data>
  <data name="CorrectTimeStampsToolTip" xml:space="preserve">
    <value>If enabled then video fragments are saved with a timestamp that is corrected by the fragment's start time.</value>
  </data>
  <data name="DoubleClickToOpen" xml:space="preserve">
    <value>Double click to open a video</value>
  </data>
  <data name="ErrorDialogTitle" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="ExportQueuePathLabel" xml:space="preserve">
    <value>Export queue path:</value>
  </data>
  <data name="ExportQueuePathToolTip" xml:space="preserve">
    <value>Use '$(VideoPath)' to set an export path relative to the original video's path. E.g.: "$(VideoPath)\Export"</value>
  </data>
  <data name="ExportQueueWindowTitle" xml:space="preserve">
    <value>Export queue</value>
  </data>
  <data name="ExportSelection" xml:space="preserve">
    <value>Export the current selection</value>
  </data>
  <data name="FileMenu" xml:space="preserve">
    <value>_File</value>
  </data>
  <data name="FileMenu_Exit" xml:space="preserve">
    <value>E_xit</value>
  </data>
  <data name="FileMenu_Export" xml:space="preserve">
    <value>_Export selection</value>
  </data>
  <data name="FileMenu_Open" xml:space="preserve">
    <value>_Open file</value>
  </data>
  <data name="Forward" xml:space="preserve">
    <value>Go to end</value>
  </data>
  <data name="HelpMenu" xml:space="preserve">
    <value>_Help</value>
  </data>
  <data name="HelpMenu_About" xml:space="preserve">
    <value>_About</value>
  </data>
  <data name="NextVideo" xml:space="preserve">
    <value>Open next video</value>
  </data>
  <data name="NextVideoTooltip" xml:space="preserve">
    <value>Opens the next video in the current folder</value>
  </data>
  <data name="Pause" xml:space="preserve">
    <value>Pause</value>
  </data>
  <data name="Play" xml:space="preserve">
    <value>Play</value>
  </data>
  <data name="PlayFromSelectionStart" xml:space="preserve">
    <value>Play from selection start</value>
  </data>
  <data name="PlaySelection" xml:space="preserve">
    <value>Play selection</value>
  </data>
  <data name="PlayUntilSelectionEnd" xml:space="preserve">
    <value>Play until selection end</value>
  </data>
  <data name="RemoveFromExportQueue" xml:space="preserve">
    <value>Remove</value>
  </data>
  <data name="RemoveFromExportQueueToolTip" xml:space="preserve">
    <value>Remove the selected item</value>
  </data>
  <data name="ResetButton" xml:space="preserve">
    <value>Reset to defaults</value>
  </data>
  <data name="SaveButton" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="SaveFFMpegLogs" xml:space="preserve">
    <value>Save ffmpeg logs</value>
  </data>
  <data name="SaveFFMpegLogsToolTip" xml:space="preserve">
    <value>If enabled then ffmpeg logs will be saved to the application's folder.</value>
  </data>
  <data name="SelectionEnd" xml:space="preserve">
    <value>End of selection</value>
  </data>
  <data name="SelectionLength" xml:space="preserve">
    <value>Length of the selection</value>
  </data>
  <data name="SelectionStart" xml:space="preserve">
    <value>Start of selection</value>
  </data>
  <data name="SetSelectionEnd" xml:space="preserve">
    <value>Set end of selection</value>
  </data>
  <data name="SetSelectionStart" xml:space="preserve">
    <value>Set start of selection</value>
  </data>
  <data name="SettingsWindowTitle" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="StartExportQueue" xml:space="preserve">
    <value>Start</value>
  </data>
  <data name="StartExportQueueToolTip" xml:space="preserve">
    <value>Start processing of the queue</value>
  </data>
  <data name="StepBackward" xml:space="preserve">
    <value>Step backward</value>
  </data>
  <data name="StepForward" xml:space="preserve">
    <value>Step forward</value>
  </data>
  <data name="ToolsMenu" xml:space="preserve">
    <value>_Tools</value>
  </data>
  <data name="ToolsMenu_ExportQueue" xml:space="preserve">
    <value>View export _queue</value>
  </data>
  <data name="ToolsMenu_Settings" xml:space="preserve">
    <value>_Settings</value>
  </data>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="VideoFritterIcon" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\VideoFritter.ico;System.Drawing.Icon, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="VideoLength" xml:space="preserve">
    <value>Video length</value>
  </data>
  <data name="VideoPosition" xml:space="preserve">
    <value>Video postition</value>
  </data>
  <data name="Volume" xml:space="preserve">
    <value>Set audio volume</value>
  </data>
  <data name="WindowTitle" xml:space="preserve">
    <value>Video Fritter</value>
  </data>
</root>